0. Description of experiments:

Rules are of the form: 
head := body

Operators:
&& - AND
[D] - Diamond
[B] - Box
[$, n] - Time Window of size "n"

- Runtime values in the tables represent total runtime of reasoner (including IO*) 
in seconds 
- Throughput is expressed as facts / second, and computed as the total nuber of 
facts processed by the system divided by the total runtime of the reasoner 
(including IO*)

==============================================================================

I. Benchmark Atomic formulas on diferent rules: 

Background: 

Programs
- ATM1
    r(X) := p(X)
- ATM2
    r(X, Y) := p(X,Y)
- ATM3
    r(W, X, Y, Z) := p(W,X,Y,Z)
- ATM4
    r(X,X,Y,Y) := p(X,Y)
- ATM5
    r(X) := p(X,Y)
- ATM6
    r(X,Y) := p(Y,X)

Experiments 
./laser.sh bench ATM1 1000 100000 0 O ~/data/stream_100M_1_1.txt  
./laser.sh bench ATM2 1000 100000 0 O ~/data/stream_100M_1_2.txt 
./laser.sh bench ATM3 1000 100000 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM4 1000 100000 0 O ~/data/stream_100M_1_2.txt  
./laser.sh bench ATM5 1000 100000 0 O ~/data/stream_100M_1_2.txt  
./laser.sh bench ATM6 1000 100000 0 O ~/data/stream_100M_1_2.txt  

Laser version
- PYPY: experiment run on Python version of Laser using pipi
- Base: Laser++  
    git checkout 

Results:

- Total Runtine (includin IO) - seconds
---------------------------------------------------------------
| Prog | PYPY | Base |  |  |
---------------------------------------------------------------
| ATM1 |   36 |  333 |  |    |
| ATM2 |   86 |  369 |  |    |
| ATM3 |  499 |  471 |  |    |
| ATM4 |   95 |  396 |  |    |
| ATM5 |   86 |  365 |  |    |
| ATM6 |   93 |  370 |  |    |
---------------------------------------------------------------

- Evaluation Time (IO excluded) - seconds
---------------------------------------------------------------
| Prog | PYPY | Base |  |  |
---------------------------------------------------------------
| ATM1 |  0.3 |  332 |  |    |
| ATM2 |   19 |  369 |  |    |
| ATM3 |  383 |  470 |  |    |
| ATM4 |   22 |  395 |  |    |
| ATM5 |   16 |  365 |  |    |
| ATM6 |   21 |  370 |  |    |
---------------------------------------------------------------

Conclusions:
- PYPY has lower evaluation time compared to the total runtime. Laser++ has
    negligable overhead of IO, because IO operations are executed in diferent 
    threads.
- PYPY does not scale well with increasing number of variables in the atoms. 
- In both versions there is not much overhead for rule where variables from the 
    body are ordered diferently, are missiong, or are doubled in the head. 

===========================================================================

2. Benchmarking how throughput scales with the number of timepoints:

Background: 
- Since the  rule has only atomic formulas, each timepoint is independent 
    from the previous. Therefore, I am expecting the throughput not to vary
    too much.

Programs
- ATM3
    r(W, X, Y, Z) := p(W,X,Y,Z)

Experiments 
./laser.sh bench ATM3 100 1000 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM3 1000 1000 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM3 10000 1000 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM3 100000 1000 0 O ~/data/stream_100M_1_4.txt  

Laser version
- PYPY: experiment run on Python version of Laser using pipi
- Base: Laser++  
    git checkout 

Results:

- Throughput 
---------------------------------------------------------------
| Timepoints |  PYPY  |   Base  |  |  |
---------------------------------------------------------------
|        100 | 283755 |  340526 |  |    |
|       1000 | 370660 |  349619 |  |    |
|      10000 | 390032 |  340661 |  |    |
|     100000 | 359406 |  237993 |  |    |
---------------------------------------------------------------

Conclusions:
- The throughput is comparable, but for 100000 timepoints, Laser++ starts to 
    lose some throughput.

===========================================================================

3. Benchmarking how throughput scales with the number of facts per timepoint:

Background: 

Programs
- ATM3
    r(W, X, Y, Z) := p(W,X,Y,Z)

Experiments 
./laser.sh bench ATM3 1000 100 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM3 1000 1000 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM3 1000 10000 0 O ~/data/stream_100M_1_4.txt  
./laser.sh bench ATM3 1000 100000 0 O ~/data/stream_100M_1_4.txt  

Laser version
- PYPY: experiment run on Python version of Laser using pipi
- Base: Laser++  
    git checkout 

Results:

- Throughput 
---------------------------------------------------------------
|  Facts |  PYPY  |  Base  |  |  |
---------------------------------------------------------------
|    100 | 232266 | 292543 |  |    |
|   1000 | 339980 | 298772 |  |    |
|  10000 | 257876 | 256727 |  |    |
| 100000 | 191064 | 211666 |  |    |
---------------------------------------------------------------

Conclusions:
- The throughput seems to scale well with the number of facts in both
    implementations of Laser.

===========================================================================


